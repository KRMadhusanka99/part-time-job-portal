generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root@localhost:3306/job_portal_system"
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model User {
  id         Int              @id @default(autoincrement())
  firstName  String           @db.VarChar(50)
  lastName   String           @db.VarChar(50)
  email      String           @unique @db.VarChar(100)
  password   String           @db.VarChar(255)
  roleId     Int
  role       Role             @relation(fields: [roleId], references: [id])
  jobCreated Job[]
  candidate  CandidateResume?
  createdAt  DateTime         @default(now())
}

model CandidateResume {
  id              Int              @id @default(autoincrement())
  description     String?          @db.Text
  minRate         Float?
  experience      Float?
  photo           String?
  skills          Json?
  userId          Int              @unique
  user            User             @relation(fields: [userId], references: [id])
  ageId           Int
  ageGroup        AgeGroup         @relation(fields: [ageId], references: [id])
  jobTitleId      Int?
  jobTitle        JobTitles?       @relation(fields: [jobTitleId], references: [id])
  regionId        Int
  region          Regions          @relation(fields: [regionId], references: [id])
  createdAt       DateTime         @default(now())
  jobApplications JobApplication[]
}

model AgeGroup {
  id         Int               @id @default(autoincrement())
  name       String
  candidates CandidateResume[]
  jobs       Job[]
}

model JobTitles {
  id         Int               @id @default(autoincrement())
  title      String
  candidates CandidateResume[]
  jobs       Job[]
}

model Regions {
  id         Int               @id @default(autoincrement())
  name       String
  candidates CandidateResume[]
  jobs       Job[]
}

model Job {
  id              Int              @id @default(autoincrement())
  employerId      Int
  employer        User             @relation(fields: [employerId], references: [id])
  ageId           Int
  ageGroup        AgeGroup         @relation(fields: [ageId], references: [id])
  jobTitleId      Int
  jobTitle        JobTitles        @relation(fields: [jobTitleId], references: [id])
  regionId        Int
  region          Regions          @relation(fields: [regionId], references: [id])
  experience      Float
  education       String
  photo           String?
  deadline        DateTime
  description     String           @db.Text
  rate            Float
  createdAt       DateTime         @default(now())
  jobApplications JobApplication[]
}

model JobApplication {
  id          Int             @id @default(autoincrement())
  jobId       Int
  job         Job             @relation(fields: [jobId], references: [id])
  candidateId Int
  candidate   CandidateResume @relation(fields: [candidateId], references: [id])
  createdAt   DateTime        @default(now())
}
